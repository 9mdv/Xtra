apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(project.file("keystore.properties")))

android {
    signingConfigs {
        debug {
            keyAlias 'debug'
            keyPassword '123456'
            storeFile file('debug-keystore.jks')
            storePassword '123456'
        }
        release {
            keyAlias keystoreProperties['KEY_ALIAS']
            keyPassword keystoreProperties['KEY_PASSWORD']
            storeFile file(keystoreProperties['KEYSTORE_PATH'])
            storePassword keystoreProperties['KEYSTORE_PASSWORD']
        }
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.github.exact7.xtra"
        minSdkVersion 16
        versionCode 2
        versionName "1.0.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        targetSdkVersion 28
    }
    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-DEBUG'
            signingConfig signingConfigs.debug
        }
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    externalNativeBuild {
        ndkBuild {
            path 'src/main/jni/Android.mk'
        }
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    dataBinding {
        enabled true
    }
    android {
        lintOptions {
            disable 'ContentDescription'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.13-beta-1'
//    implementation 'androidx.multidex:multidex:2.0.0'

    //UI
    implementation 'com.google.android.material:material:1.1.0-alpha02'
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha01'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha3'

    //Architecture components
    implementation "androidx.paging:paging-runtime-ktx:$paging"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle"
    implementation "androidx.room:room-runtime:$room"
    kapt "androidx.room:room-compiler:$room"
    implementation "android.arch.work:work-runtime:$work"
    implementation 'androidx.core:core-ktx:1.0.1'

    //Misc
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.3.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.0'
    implementation 'com.ncapdevi:frag-nav:3.0.0-RC3'
    implementation 'com.iheartradio.m3u8:open-m3u8:0.2.6'

    implementation "com.google.android.exoplayer:exoplayer-core:$exoplayer"
    implementation "com.google.android.exoplayer:exoplayer-hls:$exoplayer"
    implementation "com.google.android.exoplayer:exoplayer-ui:$exoplayer"

    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit"


    implementation "com.google.dagger:dagger:$dagger"
    kapt "com.google.dagger:dagger-compiler:$dagger"
    implementation "com.google.dagger:dagger-android:$dagger"
    implementation "com.google.dagger:dagger-android-support:$dagger"
    kapt "com.google.dagger:dagger-android-processor:$dagger"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.0.1'

    implementation "com.github.bumptech.glide:glide:$glide"
    kapt "com.github.bumptech.glide:compiler:$glide"
    implementation "com.github.bumptech.glide:okhttp3-integration:$glide@aar"

    implementation "com.tonyodev.fetch2:fetch2:$fetch"
    implementation "com.tonyodev.fetch2okhttp:fetch2okhttp:$fetch"
}

repositories {
    mavenCentral()
}

androidExtensions {
    experimental = true
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xmaxerrs" << "500"
    }
}

kapt {
    javacOptions {
        option("-Xmaxerrs", 500)
    }
}
